{
  "commands": {
    "help": {
      "description": "Show available commands",
      "category": "system",
      "usage": "help",
      "handler": "basic",
      "response": [
        "Available commands:",
        "  help           ‚Äì Show available commands",
        "  about          ‚Äì About me",
        "  projects       ‚Äì Show recent projects",
        "  skills         ‚Äì List technical skills",
        "  contact        ‚Äì Show contact information",
        "  resume         ‚Äì Display resume",
        "  blog search <query> ‚Äì Search blog posts",
        "  notes <topic>  ‚Äì Access study notes",
        "  algorithm <name> ‚Äì Show algorithm demo",
        "  learn <topic>  ‚Äì Learn about CS/AI concepts",
        "  cheatsheet <tech> ‚Äì Show quick reference",
        "  complexity <algo> ‚Äì Big O analysis",
        "  clear          ‚Äì Clear terminal history"
      ]
    },
    "about": {
      "description": "About me",
      "category": "personal",
      "usage": "about",
      "handler": "basic",
      "response": [
        "CS/AI Student & Full Stack Developer",
        "Passionate about machine learning and web technologies",
        "Building the future, one algorithm at a time",
        "Currently exploring: Deep Learning, React, Next.js"
      ]
    },
    "projects": {
      "description": "Show recent projects",
      "category": "personal",
      "usage": "projects",
      "handler": "basic",
      "response": [
        "üöÄ Recent Projects:",
        "  ‚Ä¢ AI-powered recommendation system (2024)",
        "  ‚Ä¢ Real-time chat application with WebSocket",
        "  ‚Ä¢ Neural network visualization tool",
        "  ‚Ä¢ Automated trading bot prototype"
      ]
    },
    "skills": {
      "description": "List technical skills",
      "category": "personal",
      "usage": "skills",
      "handler": "basic",
      "response": [
        "üíª Programming: Python, JavaScript, TypeScript, Java",
        "ü§ñ AI/ML: TensorFlow, PyTorch, scikit-learn, OpenAI API",
        "üåê Web: React, Next.js, Node.js, Express, PostgreSQL",
        "‚òÅÔ∏è Tools: Docker, AWS, Git, Linux"
      ]
    },
    "contact": {
      "description": "Show contact information",
      "category": "personal",
      "usage": "contact",
      "handler": "basic",
      "response": [
        "üìß Email: hello@sayedhanan.com",
        "üêô GitHub: github.com/sayedhanan",
        "üíº LinkedIn: linkedin.com/in/sayedhanan",
        "üê¶ Twitter: @sayedhanan"
      ]
    },
    "resume": {
      "description": "Display resume",
      "category": "personal",
      "usage": "resume",
      "handler": "resume"
    },
    "blog": {
      "description": "Search blog posts",
      "category": "content",
      "usage": "blog search <query>",
      "handler": "blog",
      "subcommands": ["search"]
    },
    "notes": {
      "description": "Access study notes",
      "category": "learning",
      "usage": "notes <topic>",
      "handler": "notes",
      "data": {
        "algorithms": [
          "‚Ä¢ Time Complexity: O(1) < O(log n) < O(n) < O(n log n) < O(n¬≤)",
          "‚Ä¢ Sorting: QuickSort avg O(n log n), worst O(n¬≤)",
          "‚Ä¢ Binary Search: O(log n) on sorted arrays",
          "‚Ä¢ Graph traversal: BFS/DFS both O(V + E)"
        ],
        "ml": [
          "‚Ä¢ Supervised Learning: Classification & Regression",
          "‚Ä¢ Unsupervised: Clustering, Dimensionality Reduction",
          "‚Ä¢ Neural Networks: Input ‚Üí Hidden ‚Üí Output layers",
          "‚Ä¢ Gradient Descent: Œ∏ = Œ∏ - Œ±‚àáJ(Œ∏)"
        ],
        "react": [
          "‚Ä¢ State Management: useState, useReducer, Context",
          "‚Ä¢ Effects: useEffect for side effects & cleanup",
          "‚Ä¢ Performance: useMemo, useCallback, React.memo",
          "‚Ä¢ Patterns: HOCs, Render Props, Custom Hooks"
        ]
      }
    },
    "algorithm": {
      "description": "Show algorithm demo",
      "category": "learning",
      "usage": "algorithm <name>",
      "handler": "algorithm",
      "data": {
        "bubble": {
          "desc": "Bubble Sort - O(n¬≤) comparison-based sorting",
          "demo": "\nStep 1: [64, 34, 25, 12, 22, 11, 90]\n        Compare 64 & 34 ‚Üí Swap\nStep 2: [34, 64, 25, 12, 22, 11, 90]\n        Compare 64 & 25 ‚Üí Swap\n...\nFinal:  [11, 12, 22, 25, 34, 64, 90]"
        },
        "binary": {
          "desc": "Binary Search - O(log n) search in sorted array",
          "demo": "\nArray: [1, 3, 5, 7, 9, 11, 13, 15]\nFind: 7\nStep 1: mid = 9 (too high, search left)\nStep 2: mid = 3 (too low, search right)\nStep 3: mid = 7 (found!) ‚Üí index 3"
        },
        "dfs": {
          "desc": "Depth-First Search - Graph traversal",
          "demo": "\nGraph:    A\n         / \\\n        B   C\n       /   / \\\n      D   E   F\n\nDFS order: A ‚Üí B ‚Üí D ‚Üí C ‚Üí E ‚Üí F\nStack: [A] ‚Üí [B,C] ‚Üí [D,C] ‚Üí [C] ‚Üí [E,F] ‚Üí [F] ‚Üí []"
        }
      }
    },
    "learn": {
      "description": "Learn about CS/AI concepts",
      "category": "learning",
      "usage": "learn <topic>",
      "handler": "learn",
      "data": {
        "neural": [
          "üß† Neural Networks:",
          "‚Ä¢ Inspired by biological neurons",
          "‚Ä¢ Layers: Input ‚Üí Hidden ‚Üí Output",
          "‚Ä¢ Activation functions: ReLU, Sigmoid, Tanh",
          "‚Ä¢ Training: Forward pass + Backpropagation"
        ],
        "recursion": [
          "üîÑ Recursion:",
          "‚Ä¢ Function calls itself with smaller input",
          "‚Ä¢ Base case: stops the recursion",
          "‚Ä¢ Recursive case: calls itself",
          "‚Ä¢ Examples: Factorial, Fibonacci, Tree traversal"
        ],
        "bigO": [
          "üìä Big O Notation:",
          "‚Ä¢ Describes algorithm efficiency",
          "‚Ä¢ Focus on worst-case scenario",
          "‚Ä¢ Common complexities: O(1), O(log n), O(n), O(n¬≤)",
          "‚Ä¢ Space vs Time complexity trade-offs"
        ]
      }
    },
    "cheatsheet": {
      "description": "Show quick reference",
      "category": "reference",
      "usage": "cheatsheet <tech>",
      "handler": "cheatsheet",
      "data": {
        "git": [
          "üìã Git Cheatsheet:",
          "‚Ä¢ git init - Initialize repository",
          "‚Ä¢ git add . - Stage all changes",
          "‚Ä¢ git commit -m 'msg' - Commit changes",
          "‚Ä¢ git push origin main - Push to remote",
          "‚Ä¢ git pull - Fetch and merge",
          "‚Ä¢ git branch -b name - Create new branch"
        ],
        "python": [
          "üêç Python Cheatsheet:",
          "‚Ä¢ Lists: arr = [1,2,3], arr.append(4)",
          "‚Ä¢ Dicts: d = {'key': 'value'}, d['key']",
          "‚Ä¢ Loops: for i in range(10), while condition",
          "‚Ä¢ Functions: def func(param): return value",
          "‚Ä¢ Classes: class Name: def __init__(self):"
        ],
        "sql": [
          "üóÑÔ∏è SQL Cheatsheet:",
          "‚Ä¢ SELECT * FROM table WHERE condition",
          "‚Ä¢ INSERT INTO table VALUES (val1, val2)",
          "‚Ä¢ UPDATE table SET col=val WHERE condition",
          "‚Ä¢ DELETE FROM table WHERE condition",
          "‚Ä¢ JOIN: INNER, LEFT, RIGHT, FULL OUTER"
        ]
      }
    },
    "complexity": {
      "description": "Big O analysis",
      "category": "learning",
      "usage": "complexity <algo>",
      "handler": "complexity",
      "data": {
        "bubble": {
          "time": "O(n¬≤)",
          "space": "O(1)",
          "desc": "Quadratic time, constant space"
        },
        "merge": {
          "time": "O(n log n)",
          "space": "O(n)",
          "desc": "Linearithmic time, linear space"
        },
        "binary": {
          "time": "O(log n)",
          "space": "O(1)",
          "desc": "Logarithmic time, constant space"
        },
        "dfs": {
          "time": "O(V + E)",
          "space": "O(V)",
          "desc": "Linear in vertices + edges"
        }
      }
    },
    "clear": {
      "description": "Clear terminal history",
      "category": "system",
      "usage": "clear",
      "handler": "clear"
    }
  },
  "settings": {
    "welcomeMessage": "Welcome to Interactive Portfolio v2.0",
    "prompt": "$",
    "theme": "matrix",
    "maxHistorySize": 100
  }
}