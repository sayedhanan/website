/* 1. Utility layer
   - We declare project-specific utilities that aren’t built into Tailwind.
   - For anything that can use default Tailwind classes (e.g., text-align, margin), prefer those instead of inventing new utilities. */

   @layer utilities {
    /* Text & border utilities for semantic naming */
    .text-secondary {
      color: var(--color-secondary-text);
    }
    .border-divider {
      border-color: var(--color-border);
    }
  
    /* --------------------------------------
       Horizontal wrapper: fixed max width + responsive gutters
       - .section-wrapper is a custom utility for consistent page width and padding
       - Instead of `max-inline-size`, you could also use Tailwind’s `max-w-7xl mx-auto px-4 sm:px-6 lg:px-8`,
         but this captures that pattern in a single class.
       -------------------------------------- */
    .section-wrapper {
      max-inline-size: theme("maxWidth.7xl"); /* cap at 80rem (1280px) as Tailwind’s 7xl */
      margin-inline: auto;                    /* center horizontally */
      padding-inline: 1rem;                   /* 16px default (matches px-4) */
    }
    @screen sm {
      .section-wrapper {
        padding-inline: 1.5rem;               /* 24px at sm+ (px-6) */
      }
    }
    @screen lg {
      .section-wrapper {
        padding-inline: 2rem;                 /* 32px at lg+ (px-8) */
      }
    }
  
    /* --------------------------------------
       Vertical rhythm: consistent section spacing
       - .section-spacing replicates “py-12 / py-16 / py-20” at different breakpoints
       -------------------------------------- */
    .section-spacing {
      padding-block: 3rem;                    /* 48px = py-12 */
    }
    @screen md {
      .section-spacing {
        padding-block: 4rem;                  /* 64px = py-16 */
      }
    }
    @screen lg {
      .section-spacing {
        padding-block: 5rem;                  /* 80px = py-20 */
      }
    }
  }
  